// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import { type ListNotebooksNotebooksGetError, type ListNotebooksNotebooksGetResponse, type CreateNotebookNotebooksPostData, type CreateNotebookNotebooksPostError, type CreateNotebookNotebooksPostResponse, type ListContextsNotebooksNotebookIdContextsGetData, type ListContextsNotebooksNotebookIdContextsGetError, type ListContextsNotebooksNotebookIdContextsGetResponse, type UploadMetadataNotebooksNotebookIdContextsMetadataPostData, type UploadMetadataNotebooksNotebookIdContextsMetadataPostError, type UploadMetadataNotebooksNotebookIdContextsMetadataPostResponse, type ProcessDocumentChunksNotebooksNotebookIdContextsContextIdChunkPostData, type ProcessDocumentChunksNotebooksNotebookIdContextsContextIdChunkPostError, type ProcessDocumentChunksNotebooksNotebookIdContextsContextIdChunkPostResponse, type ChatWithNotebookNotebooksNotebookIdChatPostData, type ChatWithNotebookNotebooksNotebookIdChatPostError, type ChatWithNotebookNotebooksNotebookIdChatPostResponse, type GetUserUsersMeGetError, type GetUserUsersMeGetResponse, type RootGetError, type RootGetResponse, ListNotebooksNotebooksGetResponseTransformer, CreateNotebookNotebooksPostResponseTransformer } from './types.gen';

export const client = createClient(createConfig());

/**
 * List Notebooks
 */
export const listNotebooksNotebooksGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<ListNotebooksNotebooksGetResponse, ListNotebooksNotebooksGetError, ThrowOnError>({
        ...options,
        url: '/notebooks',
        responseTransformer: ListNotebooksNotebooksGetResponseTransformer
    });
};

/**
 * Create Notebook
 */
export const createNotebookNotebooksPost = <ThrowOnError extends boolean = false>(options: Options<CreateNotebookNotebooksPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNotebookNotebooksPostResponse, CreateNotebookNotebooksPostError, ThrowOnError>({
        ...options,
        url: '/notebooks',
        responseTransformer: CreateNotebookNotebooksPostResponseTransformer
    });
};

/**
 * List Contexts
 */
export const listContextsNotebooksNotebookIdContextsGet = <ThrowOnError extends boolean = false>(options: Options<ListContextsNotebooksNotebookIdContextsGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ListContextsNotebooksNotebookIdContextsGetResponse, ListContextsNotebooksNotebookIdContextsGetError, ThrowOnError>({
        ...options,
        url: '/notebooks/{notebook_id}/contexts'
    });
};

/**
 * Upload Metadata
 */
export const uploadMetadataNotebooksNotebookIdContextsMetadataPost = <ThrowOnError extends boolean = false>(options: Options<UploadMetadataNotebooksNotebookIdContextsMetadataPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<UploadMetadataNotebooksNotebookIdContextsMetadataPostResponse, UploadMetadataNotebooksNotebookIdContextsMetadataPostError, ThrowOnError>({
        ...options,
        url: '/notebooks/{notebook_id}/contexts/metadata'
    });
};

/**
 * Process Document Chunks
 */
export const processDocumentChunksNotebooksNotebookIdContextsContextIdChunkPost = <ThrowOnError extends boolean = false>(options: Options<ProcessDocumentChunksNotebooksNotebookIdContextsContextIdChunkPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<ProcessDocumentChunksNotebooksNotebookIdContextsContextIdChunkPostResponse, ProcessDocumentChunksNotebooksNotebookIdContextsContextIdChunkPostError, ThrowOnError>({
        ...options,
        url: '/notebooks/{notebook_id}/contexts/{context_id}/chunk'
    });
};

/**
 * Chat With Notebook
 */
export const chatWithNotebookNotebooksNotebookIdChatPost = <ThrowOnError extends boolean = false>(options: Options<ChatWithNotebookNotebooksNotebookIdChatPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<ChatWithNotebookNotebooksNotebookIdChatPostResponse, ChatWithNotebookNotebooksNotebookIdChatPostError, ThrowOnError>({
        ...options,
        url: '/notebooks/{notebook_id}/chat'
    });
};

/**
 * Get User
 */
export const getUserUsersMeGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUserUsersMeGetResponse, GetUserUsersMeGetError, ThrowOnError>({
        ...options,
        url: '/users/me'
    });
};

/**
 * Root
 */
export const rootGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<RootGetResponse, RootGetError, ThrowOnError>({
        ...options,
        url: '/'
    });
};